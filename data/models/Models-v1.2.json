{
  "project": "Optidepy",
  "author": "Mikko Hilpinen",
  "version": "v1.2",
  "package": "vf.optidepy",
  "database": "optidepy",
  "classes": {
    "project": [
      {
        "name": "Project",
        "doc": "Represents a project that may be deployed, released or updated",
        "has_many_combos": true,
        "combo": {
          "name": "ProjectWithModules",
          "name_plural": "ProjectsWithModules",
          "children": "VersionedModule",
          "is_always_linked": true,
          "child_alias": "module",
          "doc": "Includes versioned modules to a project"
        },
        "props": [
          {
            "name": "name",
            "type": "NonEmptyString(16-255)",
            "index": true,
            "doc": "Name of this project",
            "with": "withName",
            "in": "withNames"
          },
          {
            "name": "rootPath",
            "type": "Path",
            "doc": "Path to the directory that contains this project"
          },
          {
            "name": "relativeIdeaPath",
            "type": "Option[Path(32-1024)]",
            "doc": "Path to the .idea directory, if applicable. Relative to this project's root directory."
          },
          {
            "type": "creation",
            "doc": "Time when this project was introduced",
            "index": false
          },
          {
            "type": "deprecation",
            "doc": "Time whe this project was removed / archived"
          }
        ]
      }
    ],
    "deployment": [
      {
        "name": "DeploymentConfig",
        "doc": "Represents settings used for deploying a project",
        "access": "config",
        "combos": [
          {
            "name": "ProjectDeploymentConfig",
            "child": "Project",
            "is_always_linked": true,
            "parent_alias": "config",
            "doc": "Combines project and deployment configuration information"
          },
          {
            "name": "DeploymentConfigWithBindings",
            "name_plural": "DeploymentConfigsWithBindings",
            "children": "Binding",
            "parent_alias": "config",
            "child_alias": "binding",
            "doc": "Includes individual deployment bindings with the general configuration"
          }
        ],
        "combo_prop": ["projectId", "name"],
        "props": [
          {
            "ref": "project",
            "doc": "Id of the project which this configuration describes",
            "with": "ofProject"
          },
          {
            "name": "outputDirectory",
            "name_plural": "outputDirectories",
            "type": "Path",
            "doc": "Directory to which all the deployed files / sub-directories will be placed"
          },
          {
            "name": "relativeInputDirectory",
            "name_plural": "relativeInputDirectories",
            "type": "Path(128-1024)",
            "doc": "Path relative to this project's root directory which contains all deployed files. \nEmpty if same as the project root path."
          },
          {
            "name": "name",
            "type": "String(16-255)",
            "doc": "Name of this deployment configuration. May be empty.",
            "with": "withName"
          },
          {
            "name": "moduleId",
            "ref": "versioned_module",
            "type": "Option[Int]",
            "doc": "Id of the module this deployment is linked to. None if not linked to a specific versioned module."
          },
          {
            "type": "creation",
            "doc": "Time when this configuration was added",
            "index": false
          },
          {
            "type": "deprecation",
            "doc": "Time when this configuration was replaced with another"
          },
          {
            "name": "usesBuildDirectories",
            "name_plural": "useBuildDirectories",
            "type": "Boolean",
            "doc": "Whether this project places deployed files in separate build directories",
            "default": true
          },
          {
            "name": "fileDeletionEnabled",
            "name_plural": "fileDeletionsAreEnabled",
            "type": "Boolean",
            "doc": "Whether output files not present in the input directories should be automatically removed",
            "default": true
          }
        ]
      },
      {
        "name": "Binding",
        "doc": "Represents a binding between an input directory/file and an output directory/file",
        "access": "binding",
        "props": [
          {
            "ref": "deployment_config",
            "name": "configId",
            "doc": "Id of the configuration this binding belongs to",
            "with": "inConfig"
          },
          {
            "name": "source",
            "type": "Path(128-1024)",
            "doc": "Path to the file or directory that is being deployed. Relative to the input root directory."
          },
          {
            "name": "target",
            "type": "Path(128-1024)",
            "doc": "Path to the directory or file where the 'source' is copied. Relative to the root output directory."
          }
        ]
      },
      {
        "name": "Branch",
        "name_plural": "Branches",
        "doc": "Represents a versioned branch of a project",
        "combos": [
          {
            "name": "DeployedBranch",
            "name_plural": "DeployedBranches",
            "child": "Deployment",
            "is_always_linked": true,
            "doc": "Includes information about a specific branch deployment"
          },
          {
            "name": "PossiblyDeployedBranch",
            "name_plural": "PossiblyDeployedBranches",
            "child": "Deployment",
            "doc": "Includes information about a specific branch deployment, if available."
          },
          {
            "name": "BranchWithDeployments",
            "name_plural": "BranchesWithDeployments",
            "children": "Deployment",
            "doc": "Attaches 0-n Deployments to a Branch"
          }
        ],
        "combo_prop": ["projectId", "name"],
        "props": [
          {
            "name": "deploymentConfigId",
            "ref": "deployment_config",
            "doc": "Id of the deployment configuration which this branch versions",
            "with": "ofDeploymentConfig"
          },
          {
            "name": "name",
            "type": "String(8-128)",
            "doc": "Name of this branch. Empty if this branch has no name (which indicates that no branching is used).",
            "with": "withName"
          },
          {
            "type": "creation",
            "doc": "Time when this branch was introduced",
            "index": false
          },
          {
            "type": "deprecation",
            "doc": "Time when this branch was removed"
          },
          {
            "name": "isDefault",
            "name_plural": "areDefaults",
            "type": "Boolean",
            "doc": "Whether this is the default branch of the associated project",
            "index": true,
            "mutable": true
          }
        ]
      },
      {
        "name": "Deployment",
        "doc": "Represents an event where a project is deployed",
        "props": [
          {
            "ref": "branch",
            "doc": "Id of the branch that was deployed",
            "with": "ofBranch",
            "in": "ofBranches"
          },
          {
            "name": "deploymentIndex",
            "name_plural": "deploymentIndices",
            "type": "Int",
            "doc": "Ordered index of this deployment. Relative to other deployments targeting the same branch."
          },
          {
            "name": "version",
            "type": "Option[Version]",
            "doc": "Deployed project version. None if versioning is not being used.",
            "index": true,
            "with": "ofVersion"
          },
          {
            "type": "creation",
            "doc": "Time when this deployment was made"
          },
          {
            "name": "latestUntil",
            "type": "deprecation",
            "doc": "Timestamp after which this was no longer the latest deployment. None while this is the latest deployment."
          }
        ]
      }
    ],
    "library": [
      {
        "name": "VersionedModule",
        "access": "module",
        "doc": "Represents a library module which may be exported or added as a dependency to another project",
        "combos": [
          {
            "name": "VersionedProjectModule",
            "child": "Project",
            "is_always_linked": true,
            "parent_alias": "module",
            "doc": "Combines project and module information"
          },
          {
            "name": "ReleasedModule",
            "child": "ModuleRelease",
            "is_always_linked": true,
            "parent_alias": "module",
            "child_alias": "release",
            "doc": "Includes a single release's information in a module"
          },
          {
            "name": "PossiblyReleasedModule",
            "child": "ModuleRelease",
            "parent_alias": "module",
            "child_alias": "release",
            "doc": "Attaches a release to a module, but only if available."
          }
        ],
        "combo_prop": ["projectId", "name"],
        "props": [
          {
            "ref": "project",
            "doc": "Id of the project this module is part of",
            "with": "inProject"
          },
          {
            "name": "name",
            "type": "String(12-255)",
            "index": true,
            "doc": "Name of this module. May be empty (if this is the only module in this project)",
            "with": "withName"
          },
          {
            "name": "relativeChangeListPath",
            "type": "Path(64-1024)",
            "doc": "A path relative to the project root directory, which points to this module's Changes.md file"
          },
          {
            "name": "relativeArtifactDirectory",
            "type": "Path(128-1024)",
            "doc": "A path relative to the project root directory, which points to the directory where artifact jar files will be exported"
          },
          {
            "type": "creation",
            "doc": "Time when this module was introduced"
          },
          {
            "type": "deprecation",
            "doc": "Time when this module was archived or removed"
          }
        ]
      },
      {
        "name": "DocText",
        "access": "doc.text",
        "doc": "Contains a single piece of line of text which is present in some documentation",
        "combo": {
          "name": "PlacedDocLine",
          "child": "DocLineLink",
          "is_always_linked": true,
          "child_alias": "link",
          "doc": "Represents a specific text line which appears in a specific documentation section"
        },
        "combo_prop": ["text", "indentation"],
        "props": [
          {
            "name": "text",
            "type": "String(64-1024)",
            "doc": "Wrapped text contents",
            "with": "withText"
          },
          {
            "name": "indentation",
            "type": "Int(Tiny)",
            "default": 0,
            "doc": "Level of indentation applicable to this line / text",
            "with": "withIndentation"
          },
          {
            "type": "creation",
            "index": false,
            "doc": "Time when this text was first introduced"
          }
        ]
      },
      {
        "name": "DocSection",
        "access": "doc.section",
        "doc": "Represents section within a documentation file",
        "combos": [
          {
            "name": "DocSectionWithHeader",
            "child": "DocText",
            "is_always_linked": true,
            "parent_alias": "section",
            "child_alias": "header",
            "doc": "Includes header text in a doc section"
          },
          {
            "name": "SubSection",
            "child": "SubSectionLink",
            "is_always_linked": true,
            "parent_alias": "section",
            "child_alias": "link",
            "doc": "Represents a documentation section which appears as a subsection of another section."
          }
        ],
        "props": [
          {
            "name": "headerId",
            "ref": "doc_text",
            "doc": "Id of the header (text) of this section.",
            "with": "withHeader"
          },
          {
            "type": "creation",
            "index": false,
            "doc": "Time when this section (version) was added"
          }
        ]
      },
      {
        "name": "PlacedLink",
        "trait": true,
        "access": "doc.link",
        "doc": "Common trait for links which place the referenced item to a specific location within the parent item",
        "combo_prop": ["parentId", "orderIndex"],
        "props": [
          {
            "name": "parentId",
            "type": "Int",
            "doc": "Id of the element within which the linked item is placed",
            "with": "underParent"
          },
          {
            "name": "childId",
            "type": "Int",
            "doc": "Id of the linked / placed element",
            "with": "toChild",
            "in": "toChildren"
          },
          {
            "name": "orderIndex",
            "name_plural": "orderIndices",
            "type": "Int(Tiny)",
            "default": 0,
            "doc": "0-based index determining the location where the linked item is placed",
            "with": "atIndex",
            "in": "atIndices"
          }
        ]
      },
      {
        "name": "DocLineLink",
        "parent": "PlacedLink",
        "access": "doc.link",
        "doc": "Links a line of text to a document section it appears in",
        "props": [
          {
            "name": "sectionId",
            "parent": "parentId",
            "ref": "doc_section",
            "with": "inSection"
          },
          {
            "name": "textId",
            "parent": "childId",
            "ref": "doc_text",
            "with": "toLine",
            "in": "toLines"
          }
        ]
      },
      {
        "name": "SubSectionLink",
        "parent": "PlacedLink",
        "access": "doc.link",
        "doc": "Represents a link between two doc sections, assigning one as the subsection of another",
        "props": [
          {
            "parent": "parentId",
            "ref": "doc_section",
            "doc": "Id of the parent section, which contains the child section",
            "with": "inSection"
          },
          {
            "parent": "childId",
            "ref": "doc_section",
            "doc": "Id of the section contained within the parent section",
            "with": "toSubSection",
            "in": "toSubSections"
          }
        ]
      },
      {
        "name": "ModuleRelease",
        "access": "module.release",
        "doc": "Represents a published version / build of a versioned module",
        "combo_prop": ["moduleId", "version"],
        "props": [
          {
            "ref": "versioned_module",
            "name": "moduleId",
            "doc": "Id of the released module",
            "with": "ofModule"
          },
          {
            "name": "version",
            "type": "Version",
            "doc": "Released version",
            "with": "ofVersion"
          },
          {
            "name": "jarName",
            "type": "String(16-255)",
            "doc": "Name of the generated jar file."
          },
          {
            "name": "docId",
            "ref": "DocSection",
            "type": "Option[Int]",
            "doc": "Id of the documentation of this release. None if there is no documentation specific to this version.",
            "with": "withDocumentation"
          },
          {
            "type": "creation",
            "doc": "Timestamp of this release"
          },
          {
            "name": "latestUntil",
            "type": "deprecation",
            "doc": "Timestamp after which this was no longer the latest release. None while this is the latest release."
          }
        ]
      }
    ],
    "dependency": [
      {
        "name": "Dependency",
        "doc": "Represents a dependency of a project / module from a specific library",
        "combos": [
          {
            "name": "ProjectDependency",
            "child": "Project",
            "is_always_linked": true,
            "doc": "Combines project and dependency information"
          },
          {
            "name": "UpdatedDependency",
            "child": "DependencyUpdate",
            "is_always_linked": true,
            "child_alias": "update",
            "doc": "Represents a dependency that has been updated at some point"
          }
        ],
        "props": [
          {
            "name": "dependentProjectId",
            "ref": "project",
            "doc": "Id of the project which this dependency concerns",
            "with": "inProject"
          },
          {
            "name": "usedModuleId",
            "ref": "versioned_module",
            "doc": "Id of the module the referenced project uses",
            "with": "ofModule"
          },
          {
            "name": "relativeLibDirectory",
            "type": "Path(24-1024)",
            "doc": "Path to the directory where library jars will be placed. \nRelative to the project's root directrory."
          },
          {
            "name": "libraryFileName",
            "type": "String(32-255)",
            "mutable": true,
            "doc": "Name of the library file matching this dependency. \nEmpty if not applicable."
          },
          {
            "type": "creation",
            "index": false,
            "doc": "Time when this dependency was registered"
          },
          {
            "type": "deprecation",
            "doc": "Time when this dependency was replaced or removed. None while active."
          }
        ]
      },
      {
        "name": "DependencyUpdate",
        "access": "update",
        "doc": "Represents an event where a project's dependency is updated to a new version.",
        "props": [
          {
            "name": "dependencyId",
            "ref": "dependency",
            "doc": "Id of the dependency this update concerns",
            "with": "ofDependency"
          },
          {
            "name": "releaseId",
            "ref": "module_release",
            "doc": "Id of the library release that was to the parent project",
            "with": "toRelease"
          },
          {
            "type": "creation",
            "doc": "Time when this update was made"
          }
        ]
      }
    ]
  }
}